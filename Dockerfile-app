# Stage 0: Generate SSL Certificates
FROM openjdk:21-jdk-slim as ssl

# SSL
ARG KEY_STORE_PASS
ARG KEY_PASS
ARG JKS_NAME
ARG KEY_ALIAS

# generate, export and import the certificate into truststore
RUN keytool -genkeypair -alias ${KEY_ALIAS} \
    -keyalg RSA -keystore ${JKS_NAME} -keysize 2048 \
    -dname "CN=Cristian Herrera, OU=cris6h16, O=cris6h16, L=Tena, ST=Napo, C=Ecuador" \
    -storepass ${KEY_STORE_PASS} -keypass ${KEY_PASS} -validity 365 && \
    keytool -exportcert -alias ${KEY_ALIAS} \
    -keystore ${JKS_NAME} -file ${KEY_ALIAS}.crt \
    -storepass ${KEY_STORE_PASS} && \
    keytool -importcert -alias ${KEY_ALIAS}-cert \
    -file ${KEY_ALIAS}.crt -keystore ${JAVA_HOME}/lib/security/cacerts \
    -storepass changeit -noprompt && \
    rm ${KEY_ALIAS}.crt

# Stage 1: Build Stage
FROM maven:3.9-eclipse-temurin-22 as builder
LABEL authors="cris6h16"

WORKDIR /app

COPY /pom.xml .
COPY /Infrastructure/ ./Infrastructure/
COPY /Application/ ./Application/
COPY /Domain/ ./Domain/

COPY --from=ssl /${JKS_NAME} ./Infrastructure/src/main/resources/${JKS_NAME}

# Download dependencies before building
RUN mvn dependency:go-offline -B

#
RUN mvn clean package -DskipTests

# Stage 2: Production Stage
FROM  openjdk:21-jdk-slim

WORKDIR /app

COPY --from=builder /app/Infrastructure/target/*.jar ./app.jar
COPY --from=ssl /usr/local/openjdk-21/lib/security/cacerts ${JAVA_HOME}/lib/security/cacerts

# non-root user ( privilege escalation attacks ) - Principle of Least Privilege
RUN groupadd appgroup && useradd -g appgroup appuser
USER appuser

EXPOSE 8080

ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom"

ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar --spring.profiles.active=prod"]

