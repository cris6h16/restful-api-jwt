version: "3.9"
services:
  backend:
    container_name: backend
    hostname: backend
    build:
      context: .
      dockerfile: Dockerfile-app
    ports:
      - "${BACK_PUBLIC_PORT}:8080"
    restart: unless-stopped
    environment: # cors comes deactivated, dont worry about the 2 env variables below
      - FRONTEND_URL=${FRONTEND_URL} # cors
      - SWAGGER_CORE="http://172.28.192.1:${SWAGGER_UI_EXTERNAL_PORT}" # cors, localhost because hostname can be used just inside the containers
      - PSQL_HOSTNAME=${PSQL_HOSTNAME}
      - PSQL_PORT=5432
      - PSQL_DB_NAME=${PSQL_DB_NAME}
      - PSQL_USER=${PSQL_USER}
      - PSQL_PASS=${PSQL_PASS}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - REDIS_PORT=6379
      - REDIS_PASS=${REDIS_PASS}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - LOGGING_LEVEL_ROOT=${LOGGING_LEVEL_ROOT}
    networks:
      - private
      - public
    depends_on:
        - db
        - server-cache
    volumes:
      - backend-data:/logs


  db:
    container_name: db
    hostname: ${PSQL_HOSTNAME}
    image: postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - private
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASS}
      POSTGRES_DB: ${PSQL_DB_NAME}
    restart: unless-stopped

# todo: add healthchecks


  server-cache:
    image: redis:latest
    container_name: redis
    hostname: ${REDIS_HOSTNAME}
    restart: unless-stopped
    volumes:
      -  redis-data:/data
    environment:
      REDIS_ARGS: --requirepass ${REDIS_PASS}
    networks:
      - private

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    hostname: ${SWAGGER_UI_HOSTNAME}
    environment:
      - SWAGGER_JSON=/openapi-description.yaml
    volumes:
      - ./openapi-description.yaml:/openapi-description.yaml
    ports:
      - "${SWAGGER_UI_EXTERNAL_PORT}:8080"
    restart: unless-stopped
    networks:
      - public



networks:
  private:
  public:



volumes:
  postgres-data:
  redis-data:
  backend-data:



